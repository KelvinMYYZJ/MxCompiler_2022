
#pragma once
const char* kBuiltinASM = "\t.text\n\t.align 2\n\t.globl __Malloc_array\n__Malloc_array:\n\tlw a1,-4(sp)\n\tslli a0,a1,4\n\ttail malloc\n\n\t.globl __Malloc_int\n__Malloc_int:\n\tlw a1,-4(sp)\n\tslli a0,a1,2\n\ttail malloc\n\n\t.globl __Malloc_bool\n__Malloc_bool:\n\tlw a0,-4(sp)\n\ttail malloc\n\n\t.globl __Malloc_ptr\n__Malloc_ptr:\n\tlw a1,-4(sp)\n\tslli a0,a1,3\n\ttail malloc\n\n\t.globl print\nprint:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\ttail printf\n\n\t.globl println\nprintln:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\ttail puts\n\n\t.globl printInt\nprintInt:\n\tla a0,.str__printInt_format\n\tlw a1,-4(sp)\n\ttail printf\n\n\t.globl printlnInt\nprintlnInt:\n\tla a0,.str__printlnInt_format\n\tlw a1,-4(sp)\n\ttail printf\n\n\t.globl toString\ntoString:\n\taddi sp,sp,-12\n\tsw ra,4(sp)\n\t# malloc string\n\tli a0,8\n\tcall malloc\n\tsw a0,0(sp)\n\t# malloc cstring\n\tli a0,11\n\tcall malloc\n\t# store the cstring ptr into string\n\tlw a4,0(sp)\n\tsw a0,0(a4)\n\t# write into the cstring\n\tla a1,.str__printInt_format\n\tlw a2,8(sp)\n\tcall sprintf\n\t# wirte length into string\n\tlw a4,0(sp)\n\tsw a0,4(a4)\n\t\n\tmv a0,a4\n\tlw ra,4(sp)\n\taddi sp,sp,12\n\tret\n\n\t.globl getString\ngetString:\n# int : 12(sp)\n# ra : 8(sp)\n# string : 4(sp)\n# cstring : 0(sp)\n\taddi sp,sp,-16\n\tsw ra,8(sp)\n\t# malloc string\n\tli a0,8\n\tcall malloc\n\tsw a0,4(sp)\n\t# malloc cstring\n\tli a0,256\n\tcall malloc\n\tsw a0,0(sp)\n\t# store the cstring ptr into string\n\tlw a1,4(sp)\n\tsw a0,0(a1)\n\t# scan the cstring\n\tmv a1,a0\n\tla a0,.str__print_format\n\tcall scanf\n\t# get and store length\n\tlw a0,0(sp)\n\tcall strlen\n\tlw a1,4(sp)\n\tsw a0,4(a1)\n\n\tmv a0,a1\n\tlw ra,8(sp)\n\taddi sp,sp,16\n\tret\n\n\t.globl getInt\ngetInt:\n\taddi sp,sp,-8\n\tsw ra,4(sp)\n\tla a0,.str__printInt_format\n\taddi a1,sp,0\n\tcall scanf\n\tlw a0,0(sp)\n\tlw ra,4(sp)\n\taddi sp,sp,8\n\tret\n\n\t.globl string.length\nstring.length:\n\tlw a0,-4(sp)\n\tlw a0,4(a0)\n\tret\n\n\t.globl string.parseInt\nstring.parseInt:\n\taddi sp,sp,-8\n\tsw ra,0(sp)\n\n\tlw a0,4(sp)\n\tlw a0,0(a0)\n\tla a1,.str__printInt_format\n\taddi a2,sp,4\n\tcall sscanf\n\tlw a0,4(sp)\n\n\tlw ra,0(sp)\n\taddi sp,sp,8\n\tret\n\n\t.globl string.ord\nstring.ord:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\tlw a1,-8(sp)\n\tadd a0,a0,a1\n\tlbu a0,0(a0)\n\tret\n\n\t.globl string.substring\nstring.substring:\n# complete string : 16(sp)\n# left : 12(sp)\n# right/len :8(sp)\n# ra : 4(sp)\n# new string : 0(sp)\n\taddi sp,sp,-20\n\tsw ra,4(sp)\n\tlw t1,8(sp)\n\tlw t2,12(sp)\n\tsub t0,t1,t2\n\tsw t0,8(sp)\n\t# malloc string\n\tli a0,8\n\tcall malloc\n\tsw a0,0(sp)\n\t# malloc cstring\n\tlw a0,8(sp)\n\taddi a0,a0,1\n\tcall malloc\n\t# memcpy into cstring\n\tlw a4,0(sp)\n\tsw a0,0(a4)\n\tlw a2,8(sp)\n\tsw a2,4(a4)\n\tlw a1,16(sp)\n\tlw a1,0(a1)\n\tlw t2,12(sp)\n\tadd a1,a1,t2\n\tcall memcpy\n\n\tlw a0,0(sp)\n\tlw ra,4(sp)\n\taddi sp,sp,20\n\tret\n\n\t.globl string.lt\nstring.lt:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\tlw a1,-8(sp)\n\tlw a1,0(a1)\n\taddi sp,sp,-4\n\tsw ra,0(sp)\n\tcall strcmp\n\tslti a0,a0,0\n\tlw ra,0(sp)\n\taddi sp,sp,4\n\tret\n\n\t.globl string.le\nstring.le:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\tlw a1,-8(sp)\n\tlw a1,0(a1)\n\taddi sp,sp,-4\n\tsw ra,0(sp)\n\tcall strcmp\n\tslti a0,a0,1\n\tlw ra,0(sp)\n\taddi sp,sp,4\n\tret\n\n\t.globl string.eq\nstring.eq:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\tlw a1,-8(sp)\n\tlw a1,0(a1)\n\taddi sp,sp,-4\n\tsw ra,0(sp)\n\tcall strcmp\n\tseqz a0,a0\n\tlw ra,0(sp)\n\taddi sp,sp,4\n\tret\n\n\t.globl string.neq\nstring.neq:\n\tlw a0,-4(sp)\n\tlw a0,0(a0)\n\tlw a1,-8(sp)\n\tlw a1,0(a1)\n\taddi sp,sp,-4\n\tsw ra,0(sp)\n\tcall strcmp\n\tsnez a0,a0\n\tlw ra,0(sp)\n\taddi sp,sp,4\n\tret\n\n\t.globl string.add\nstring.add:\n# cstring1 : 16(sp)\n# cstring2 : 12(sp)\n# ra : 8(sp)\n# new cstring : 4(sp)\n# len.new string : 0(sp)\n\taddi sp,sp,-20\n\tsw ra,8(sp)\n\tlw a0,16(sp)\n\tlw t1,4(a0)\n\tlw a0,0(a0)\n\tsw a0,16(sp)\n\tlw a1,12(sp)\n\tlw t2,4(a1)\n\tlw a1,0(a1)\n\tsw a1,12(sp)\n\tadd t0,t1,t2\n\tsw t0,0(sp)\n\t# malloc cstring\n\taddi a0,t0,1\n\tcall malloc\n\tsw a0,4(sp)\n\t# malloc string\n\tli a0,8\n\tcall malloc\n\t# store string info\n\tlw a1,4(sp)\n\tsw a1,0(a0)\n\tlw a2,0(sp)\n\tsw a2,4(a0)\n\tsw a0,0(sp)\n\t# copy string1\n\tmv a0,a1\n\tlw a1,16(sp)\n\tcall strcpy\n\t# append string2\n\tlw a1,12(sp)\n\tcall strcat\n\tlw a0,0(sp)\n\tlw ra,8(sp)\n\taddi sp,sp,20\n\tret\n\n\t.section .rodata\n.str__print_format:\n\t.string \"%s\"\n.str__printInt_format:\n\t.string \"%d\"\n.str__printlnInt_format:\n\t.string \"%d\\n\"";
